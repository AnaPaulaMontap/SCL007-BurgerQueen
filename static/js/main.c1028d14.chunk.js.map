{"version":3,"sources":["componentes/nav-bar/nav-bar.js","componentes/columns/columnsPrice.js","componentes/buttons/menubutton.js","componentes/nameClient/nameClient.js","componentes/menuday/menu-breakfast.js","componentes/menuday/menu-allday.js","provider.js","componentes/ordenready/ordenready.js","Steward.js","compKitchen/helper.js","Kitchen.js","App.js","serviceWorker.js","index.js","componentes/imagenes/BQdef.png"],"names":["NavBar","props","react_default","a","createElement","className","Link","to","src","logo1","alt","SplitPane","left","right","Toogle","toogleOn","onClick","children","NameForm","type","onChange","MenuBreakfast","object","map","i","onClickButtons","key","item","product","value","Precio","MenuDay","Object","keys","flat","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","ref","OrderReady","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","orderReady","orden","seeFirebase","bind","assertThisInitialized","handleChangeState","updateFirebase","_this2","setState","objectSpread","console","log","_this3","child","orderByChild","equalTo","once","snapshot","val","childData","arrOrderReady","id","push","window","confirm","update","delivery","_this4","itemOrder","style","display","name","order","list","Component","Steward","isToggleOn","takeOrder","orderD","nameClient","stateOrder","menuBreakfast","menuAllday","totalAccount","menuB","menu","menuDesayuno","menuD","menuDia","handleChange","handleClickDay","handleClickBreakfast","handleInputChange","handleFirebase","handleDeleteItem","event","target","getAttribute","Number","newItem","price","concat","updates","filter","nameClient_nameClient","ordenready_ordenready","columnsPrice","toLocaleUpperCase","menubutton","menu_breakfast","menu_allday","HelperKitchen","orderKitchen","handleClickChange","on","arrOrderComplete","read","nameOrder","Kitchen","helper","App","BrowserRouter","nav_bar_nav_bar","Switch","Route","exact","path","render","src_Steward","src_Kitchen","Redirect","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c1028d14.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './nav-bar.css';\nimport logo1 from '../imagenes/BQdef.png'\n\n\n  function NavBar (props) {\n      return (\n          \n          <div className=\"nav\">\n            <Link to=\"/Steward\" className=\"nav-button\">TOMA DE PEDIDOS</Link>\n            <img className=\"logo\" src={logo1} alt=\"logo1\"></img>          \n            <Link to=\"/Kitchen\" className=\"nav-button\">COCINA</Link>\n          </div>\n          \n       \n      );\n    \n  }\n     \n\n  export default NavBar","import React from 'react';\nimport  './columns.css';\n\n  \n  function SplitPane(props) {\n    return (\n      <div className=\"SplitPane\">\n        <div className=\"SplitPane-left\">\n          {props.left}\n        </div>\n        <div className=\"SplitPane-right\">\n          {props.right}\n        </div>\n      </div>\n    );\n  }\n  export default SplitPane","import React from 'react';\nimport './menubuttons.css'\n\n\nfunction Toogle(props){\n  if(props.toogleOn){\n    return (\n      <button onClick={()=>props.onClick(props.children)} className=\"buttonsMenu\">{props.children}</button>\n      );\n  }\n  else{\n    return null\n  }\n}\n\nexport default Toogle","import React from 'react';\nimport './nameClient.css'\n\n\nfunction NameForm (props) {\n      return (\n        <div className=\"Client col\">     \n          <form>\n          <label>\n            Atendiendo a: \n            <input type=\"text\" onChange={props.onChange}/>\n          </label>\n        </form>\n        </div>\n      );\n    }\n  \n  \n  \nexport default NameForm","import React from 'react';\nimport './menu-day.css'\n\n\nfunction MenuBreakfast(props) { \n\nreturn (\n  <div>\n  {props.object && \n    props.object.map((i) => {\n      return <button onClick={props.onClickButtons} className=\"buttonFood\" key={i.item} product={i.item} value={i.Precio} >{i.item}:{i.Precio}</button>\n  })}\n  \n  </div>\n);\n}\n\n\n/*\n  if(props.object){\n \n    for(let i of props.object){\n\n     buttons = <button onClick={props.onClick} className=\"buttonFood\" key={i.item} value={i.item}>{i.item}:{i.Precio}</button>\n     \n    }\n  \n  }\n  console.log(buttons)\n  return buttons\n  }\n\n \n \n \n \n (\n   { objectArr && (\n\n   for (let i of objectArr){\n     \n      <button onClick={props.onClick} className=\"buttonFood\" key={i.item} value={i.item}>{i.item} : {i.Precio}</button>\n      \n   })});\n  }\n\n  const items = props.object.map((item) =>{\n    return (\n      <button onClick={props.onClick} className=\"buttonFood\" key={item} value={item}> {item}</button>\n      )\n    })\n   return items */\n \n\n\nexport default MenuBreakfast \n\n/*\nclass MenuDay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: true,\n      amount: 2\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render(props) {\n      if(props.object){\n        const items = props.object.map((item) =>{\n          return (\n              <form>\n                <label>\n                  {item}\n                  <input\n                    name={item}\n                    type=\"checkbox\"\n                    checked={this.state.item}\n                    onChange={()=> props.onChange(item)}/>\n                </label>\n                <label>\n                  Cantidad:\n                  <input\n                    name=\"cantidad\"\n                    type=\"number\"\n                    value={this.state.amount}\n                    onChange={()=> props.onChange(item)}/>\n                </label>\n              </form>\n            )\n          })\n          return items\n        }\n        else{\n          return null\n        } \n      }\n    \n  }\n\n\nexport default MenuDay  */","import React from 'react';\nimport './menu-day.css'\n\n\nfunction MenuDay(props) {\n\n  if (!props.object) {\n    return null;\n  }\n  let arrMenu = Object.keys(props.object).map((key) => {\n     const menuDay = props.object[key];\n     return menuDay\n  })\n  \n  let arrButtons = arrMenu.flat()\n\n  return arrButtons.map((a) => {\n    return <button className=\"buttonDay\" onClick={props.onClickButtons} key={a.item} product={a.item} value={a.Precio} >{a.item}:{' '}{a.Precio}</button>\n  })\n  \n}\n \n \n        \n\n\n    /*  Object.entries(props.object).map((i) => {\n        console.log(props.object)\n       let arrButtons = i[1]\n     \n       arrButtons.map((a)=>{\n        //console.log(a.item, a.Precio)\n         return <div></div>\n       })\n       \n        return <div className=\"buttonDay\" key={i[0]}>\n        <p>{i[0]}</p>*/\n      \n  \n\nexport default MenuDay","import * as firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyBXGfThCW0QedlE-UhYaZz6ghvTRflCFLk\",\n    authDomain: \"burguerqueen-109ab.firebaseapp.com\",\n    databaseURL: \"https://burguerqueen-109ab.firebaseio.com\",\n    projectId: \"burguerqueen-109ab\",\n    storageBucket: \"burguerqueen-109ab.appspot.com\",\n    messagingSenderId: \"488132391000\"\n  };\nfirebase.initializeApp(config);\n\nexport const database = firebase.database().ref();","import React, {Component} from 'react';\nimport {database} from '../../provider.js'\nimport './ordenready.css'\n\n\nclass OrderReady extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orderReady: false,\n            orden:[],\n          };\n    \n        this.seeFirebase = this.seeFirebase.bind(this); \n        this.handleChangeState = this.handleChangeState.bind(this); \n        this.updateFirebase = this.updateFirebase.bind(this);\n      }    \n\n      handleChangeState(){\n        this.setState({\n            ...this.state,\n            orderReady: !this.state.orderReady,\n          }, ()=>{\n            console.log(this.state.orderReady) \n          })\n\n          return this.seeFirebase()  \n      }\n    \n      seeFirebase() {\n\n        database.child('BQKitchen').orderByChild('state').equalTo(true).once('value',(snapshot) => {\n            console.log(snapshot.val())\n            \n                let childData = snapshot.val();\n                const arrOrderReady = [];\n                for (let value in childData) {\n                    let item = childData[value]\n                    item.id = value\n                    arrOrderReady.push(item)\n                }  \n                this.setState({\n                    ...this.state,\n                    orden: arrOrderReady,\n                  }, ()=>{\n                    console.log(this.state.orden)\n                  })                 \n                });    \n      }\n\n      updateFirebase(props) {\n\n        window.confirm(\"El pedido fue entregado?\") &&\n        \n          database.child('BQKitchen').child(props.id).update({delivery:true})\n        \n      \n            \n    }\n\n    render() {  \n        let itemOrder = this.state.orden.map((item)=>{\n            return (\n\n         <div className='orderReady' onClick={()=>this.updateFirebase(item)} key={item.id} style={{display: item.delivery ? 'none' : 'block'}}>\n            <p> Nombre: <strong>{item.name}</strong></p>\n            <p> Item:</p>\n            <ul>\n              {item.order.map((list,i)=>{\n                return (<li key={i}>{list}</li>)\n              })}\n              </ul>\n          </div>)\n          })\n      return (\n        <div className='col'>\n        <div className=\"order\" onClick={this.handleChangeState}>     \n        <p>Ver Pedidos Listos</p>\n        </div>\n        {this.state.orderReady && \n        <div className='itemOrder'> {itemOrder}</div>}\n        \n      </div>\n      );\n    }\n};\n  \n  \n  \nexport default OrderReady","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n//mport NavBar from './componentes/nav-bar/nav-bar.js'\nimport SplitPane from './componentes/columns/columnsPrice.js'\nimport Toogle from './componentes/buttons/menubutton.js'\nimport NameForm from './componentes/nameClient/nameClient.js'\nimport MenuBreakfast from './componentes/menuday/menu-breakfast.js'\nimport MenuDay from './componentes/menuday/menu-allday';\nimport OrderReady from './componentes/ordenready/ordenready'\nimport {database} from './provider.js'\n\n\nclass Steward extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    isToggleOn: true,\n    takeOrder:{\n        order: false,\n        orderD: false,\n        nameClient:'',\n        stateOrder:[],\n        menuBreakfast: true,\n        menuAllday: true,\n        totalAccount: 0,\n      },\n    menuB: props.menu.menuDesayuno,\n    menuD: props.menu.menuDia\n  }\n    \n    this.handleChange= this.handleChange.bind(this); \n    this.handleClickDay = this.handleClickDay.bind(this); \n    this.handleClickBreakfast = this.handleClickBreakfast.bind(this); \n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleFirebase = this.handleFirebase.bind(this);\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n    \n  }\n\n  handleChange(event){\n    this.setState({\n      ...this.state,\n      takeOrder:{\n        ...this.state.takeOrder,\n        nameClient: event.target.value\n      }});\n  }\n  \n  handleClickDay(){\n         this.setState({\n        ...this.state,\n        takeOrder:{\n          ...this.state.takeOrder,\n        menuBreakfast : false,\n        menuAllday : false,\n        orderD: this.state.menuD,\n      }});\n      \n  }\n\nhandleClickBreakfast(){\n    this.setState({\n   ...this.state,\n   takeOrder:{\n     ...this.state.takeOrder,\n   menuAllday : false,\n   menuBreakfast : false,\n   order: this.state.menuB\n  }});\n}\n\nhandleInputChange(event) {\n  let name = event.target.getAttribute('product')\n  let value = Number(event.target.getAttribute('value'))\n  const newItem = []\n \n \n  newItem.push({\n    item: name,\n    price: value\n  })\n\n\n  this.setState({\n    ...this.state,\n   takeOrder:{\n     ...this.state.takeOrder,\n    stateOrder: this.state.takeOrder.stateOrder.concat(newItem),\n    totalAccount:  this.state.takeOrder.totalAccount + value,\n    }\n    \n})\n}\n\nhandleFirebase(){\n\n  const order = {\n   state: false, \n   name: this.state.takeOrder.nameClient,\n   order: this.state.takeOrder.stateOrder.map((itemOrder)=>{  \n    return (itemOrder.item)\n  }) \n  }; \n  \n  let newPostKey = database.push().key;\n\n  let updates = {};\n  updates['BQKitchen/'+ newPostKey] = order;\n\n \n  return database.update(updates);\n}\n\nhandleDeleteItem(props){\n\n  this.setState({\n    ...this.state,\n   takeOrder:{\n    ...this.state.takeOrder,\n    stateOrder: this.state.takeOrder.stateOrder.filter((itemOrder)=>{  \n    return itemOrder !== props\n  }) \n}\n  });\n\n}\n\n\n\nrender() {\n\n  let order = this.state.takeOrder.stateOrder.map((itemOrder)=>{\n  \n    return <div><button onClick={()=> this.handleDeleteItem(itemOrder)}>X</button><p>{itemOrder.item} ... {itemOrder.price}</p></div>\n  }) \n\n    return (\n      <div className=\"App\">\n      <div className=\"in-between\">\n      <NameForm onChange={this.handleChange}/>\n      <OrderReady/>\n        </div>          \n        <SplitPane\n          left={  \n            <div>\n            <p>Resumen de Pedido</p>\n            <p>Cliente:{' '}{this.state.takeOrder.nameClient.toLocaleUpperCase()}</p>  \n            <p key={order}>{order}</p>\n            <footer>\n              <button className=\"App-buttons\">Total: ${this.state.takeOrder.totalAccount}</button>\n              <button className=\"App-buttons\" onClick={this.handleFirebase}>Enviar a Cocina</button>               \n            </footer>            \n            </div>\n          }  \n          right={\n            <div className=\"rightFlex\">           \n            <Toogle toogleOn={this.state.takeOrder.menuBreakfast} onClick={this.handleClickBreakfast} children='Menú Desayuno'/>\n            <Toogle toogleOn={this.state.takeOrder.menuAllday} onClick={this.handleClickDay} children='Menú del Día'/> \n            <MenuBreakfast object={this.state.takeOrder.order} onClickButtons={this.handleInputChange}/>  \n            <MenuDay object={this.state.takeOrder.orderD} onClickButtons={this.handleInputChange} />  \n            \n            </div>\n          }/>\n            \n        \n          \n       \n      </div>\n    );\n  }\n}\n\nexport default Steward;\n","import React, {Component} from 'react'\nimport {database} from '../provider.js'\nimport './helpers.css'\n\nclass HelperKitchen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderKitchen: [],\n      orderReady: false,\n    }\n\n    this.handleClickChange = this.handleClickChange.bind(this);  \n  }\n\n  componentDidMount () {\n    database.child('BQKitchen').on('value', (snapshot) => {\n      let key = snapshot.val();\n      console.log(snapshot.val())\n      const arrOrderComplete = [];\n      for (let read in key) {\n          let item = key[read]\n          item.id = read\n          arrOrderComplete.push(item)\n      }\n      this.setState({\n        ...this.state,\n        orderKitchen: arrOrderComplete\n      }, ()=>{\n        console.log(this.state.orderKitchen)\n      })\n      \n    }); \n  }\n\n    handleClickChange (props) {\n\n    window.confirm(\"El pedido esta completo?\") &&\n    \n      database.child('BQKitchen').child(props.id).update({state:true})\n    \n  }\n\n  render() {\n\n    let nameOrder = this.state.orderKitchen.map((item)=>{\n      return (\n      <div onClick={() => this.handleClickChange(item)} className =\"orderKitchen\" key={item.id} style={{display: item.state ? 'none' : 'block'}}>\n      <p> Nombre: <strong>{item.name}</strong></p>\n      <p> Item:</p>\n      <ul>\n        {item.order.map((list,i)=>{\n          return (<li key={i}>{list}</li>)\n        })}\n        </ul>\n    </div>)\n    })\n   \n    return ( \n      \n      \n      <div >\n        {nameOrder}\n      </div>\n    )\n\n  }\n}\n\nexport default HelperKitchen\n\n\n\n\n/*\nfunction HelperKitchen(){  \n  \n database.once('value', (snapshot) => {\n  const orderKitchen=[];\n  let snapKey = snapshot.val();\n      for (let read in snapKey){\n          orderKitchen.push(snapKey[read])\n      }  \n\n   orderKitchen.map((itemOrder) => {\n       \n        let name = itemOrder.name  \n        let order = itemOrder.order   \n\n        return console.log(name,order)\n      })\n    });\n\n    return(\n      <div className=\"orderKitchen\">\n      <p>Nombre:</p>\n      <p>Item:</p>\n      </div>\n    )\n      \n\n} */\n\n/*,()=>{\n        let arrName = this.state.orderKitchen.map((itemOrder) => {\n          return (itemOrder.name)\n        })\n        let arrOrder = this.state.orderKitchen.map((itemOrder) => {\n          return (itemOrder.order)\n        })\n        \n        this.setState({\n          ...this.state,\n          nameOrder: this.state.nameOrder.concat(arrName),\n          itemOrder: this.state.itemOrder.concat(arrOrder),\n        },() =>{\n        console.log(arrOrderComplete)\n        console.log(this.state.nameOrder)\n        console.log(this.state.itemOrder)\n        }); */","import React, {Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport HelperKitchen from './compKitchen/helper';\n\n\nclass Kitchen extends Component {\n    render(){\n    return (\n        <div className=\"App-header\">\n        <HelperKitchen/>\n        </div>\n    )\n    }\n}\n\nexport default Kitchen;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch , Redirect} from 'react-router-dom';\nimport './App.css';\nimport NavBar from './componentes/nav-bar/nav-bar.js'\nimport menu from'./burguerQueen.json'\nimport Steward from './Steward'\nimport Kitchen from './Kitchen';\n\n\nclass App extends Component {\n/*\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  } */\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar className=\"App-header\"/>         \n          <Switch>           \n            <Route\n              exact\n              path=\"/Steward\"\n              render={() => <Steward menu={menu}/>} />\n            <Route\n              exact\n              path=\"/Kitchen\"\n              render={() => <Kitchen/>} />                     \n          <Redirect path=\"*\" to=\"/Steward\"></Redirect>      \n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import menu from'./burguerQueen.json'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/BQdef.ee7063d0.png\";"],"sourceRoot":""}