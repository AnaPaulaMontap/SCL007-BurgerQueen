{"version":3,"sources":["componentes/nav-bar/nav-bar.js","componentes/columns/columnsPrice.js","componentes/buttons/menubutton.js","componentes/nameClient/nameClient.js","componentes/menuday/menu-breakfast.js","componentes/menuday/menu-allday.js","provider.js","Steward.js","compKitchen/helper.js","Kitchen.js","App.js","serviceWorker.js","index.js","componentes/imagenes/BQ.png"],"names":["NavBar","react_default","a","createElement","className","Link","to","src","logo1","alt","Component","SplitPane","props","left","right","Toogle","toogleOn","onClick","children","NameForm","type","onChange","MenuBreakfast","object","map","i","onClickButtons","key","item","product","value","Precio","MenuDay","Object","keys","flat","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","ref","Steward","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isToggleOn","takeOrder","order","orderD","nameClient","stateOrder","menuBreakfast","menuAllday","totalAccount","menuB","menu","menuDesayuno","menuD","menuDia","handleChange","bind","assertThisInitialized","handleClickDay","handleClickBreakfast","handleInputChange","handleFirebase","event","setState","objectSpread","target","name","getAttribute","Number","newItem","push","price","concat","itemOrder","updates","update","nameClient_nameClient","columnsPrice","toLocaleUpperCase","menubutton","menu_breakfast","menu_allday","HelperKitchen","orderKitchen","nameOrder","_this2","child","on","snapshot","val","arrOrderComplete","read","arrName","arrOrder","console","log","listOrder","Kitchen","helper","App","BrowserRouter","nav_bar_nav_bar","Switch","Route","exact","path","render","src_Steward","src_Kitchen","Redirect","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a61ca6ee.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './nav-bar.css';\nimport logo1 from '../imagenes/BQ.png'\n\n\n  class NavBar extends Component {\n    render() {\n      return (\n       \n          <div className=\"nav\">\n            <Link to=\"/Steward\" className=\"nav-button\">TOMA DE PEDIDOS</Link>\n            <img className=\"logo\" src={logo1} alt=\"logo1\"></img>          \n            <Link to=\"/Kitchen\" className=\"nav-button\">COCINA</Link>\n          </div>\n       \n      );\n    }\n  }\n     \n\n  export default NavBar","import React from 'react';\nimport  './columns.css';\n\n  \n  function SplitPane(props) {\n    return (\n      <div className=\"SplitPane\">\n        <div className=\"SplitPane-left\">\n          {props.left}\n        </div>\n        <div className=\"SplitPane-right\">\n          {props.right}\n        </div>\n      </div>\n    );\n  }\n  export default SplitPane","import React from 'react';\nimport './menubuttons.css'\n\n\nfunction Toogle(props){\n  if(props.toogleOn){\n    return (\n      <button onClick={()=>props.onClick(props.children)} className=\"buttonsMenu\">{props.children}</button>\n      );\n  }\n  else{\n    return null\n  }\n}\n\nexport default Toogle","import React from 'react';\nimport './nameClient.css'\n\n\nfunction NameForm (props) {\n      return (\n        <div className=\"Client\">     \n          <form>\n          <label>\n            Atendiendo a: \n            <input type=\"text\" onChange={props.onChange}/>\n          </label>\n        </form>\n        </div>\n      );\n    }\n  \n  \n  \nexport default NameForm","import React from 'react';\nimport './menu-day.css'\n\n\nfunction MenuBreakfast(props) { \n\nreturn (\n  <div>\n  {props.object && \n    props.object.map((i) => {\n      return <button onClick={props.onClickButtons} className=\"buttonFood\" key={i.item} product={i.item} value={i.Precio} >{i.item}:{i.Precio}</button>\n  })}\n  \n  </div>\n);\n}\n\n\n/*\n  if(props.object){\n \n    for(let i of props.object){\n\n     buttons = <button onClick={props.onClick} className=\"buttonFood\" key={i.item} value={i.item}>{i.item}:{i.Precio}</button>\n     \n    }\n  \n  }\n  console.log(buttons)\n  return buttons\n  }\n\n \n \n \n \n (\n   { objectArr && (\n\n   for (let i of objectArr){\n     \n      <button onClick={props.onClick} className=\"buttonFood\" key={i.item} value={i.item}>{i.item} : {i.Precio}</button>\n      \n   })});\n  }\n\n  const items = props.object.map((item) =>{\n    return (\n      <button onClick={props.onClick} className=\"buttonFood\" key={item} value={item}> {item}</button>\n      )\n    })\n   return items */\n \n\n\nexport default MenuBreakfast \n\n/*\nclass MenuDay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: true,\n      amount: 2\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render(props) {\n      if(props.object){\n        const items = props.object.map((item) =>{\n          return (\n              <form>\n                <label>\n                  {item}\n                  <input\n                    name={item}\n                    type=\"checkbox\"\n                    checked={this.state.item}\n                    onChange={()=> props.onChange(item)}/>\n                </label>\n                <label>\n                  Cantidad:\n                  <input\n                    name=\"cantidad\"\n                    type=\"number\"\n                    value={this.state.amount}\n                    onChange={()=> props.onChange(item)}/>\n                </label>\n              </form>\n            )\n          })\n          return items\n        }\n        else{\n          return null\n        } \n      }\n    \n  }\n\n\nexport default MenuDay  */","import React from 'react';\nimport './menu-day.css'\n\n\nfunction MenuDay(props) {\n\n  if (!props.object) {\n    return null;\n  }\n  let arrMenu = Object.keys(props.object).map((key) => {\n     const menuDay = props.object[key];\n     return menuDay\n  })\n  \n  let arrButtons = arrMenu.flat()\n\n  return arrButtons.map((a) => {\n    return <button className=\"buttonDay\" onClick={props.onClickButtons} key={a.item} product={a.item} value={a.Precio} >{a.item}:{' '}{a.Precio}</button>\n  })\n  \n}\n \n \n        \n\n\n    /*  Object.entries(props.object).map((i) => {\n        console.log(props.object)\n       let arrButtons = i[1]\n     \n       arrButtons.map((a)=>{\n        //console.log(a.item, a.Precio)\n         return <div></div>\n       })\n       \n        return <div className=\"buttonDay\" key={i[0]}>\n        <p>{i[0]}</p>*/\n      \n  \n\nexport default MenuDay","import * as firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyBXGfThCW0QedlE-UhYaZz6ghvTRflCFLk\",\n    authDomain: \"burguerqueen-109ab.firebaseapp.com\",\n    databaseURL: \"https://burguerqueen-109ab.firebaseio.com\",\n    projectId: \"burguerqueen-109ab\",\n    storageBucket: \"burguerqueen-109ab.appspot.com\",\n    messagingSenderId: \"488132391000\"\n  };\nfirebase.initializeApp(config);\n\nexport const database = firebase.database().ref();","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n//mport NavBar from './componentes/nav-bar/nav-bar.js'\nimport SplitPane from './componentes/columns/columnsPrice.js'\nimport Toogle from './componentes/buttons/menubutton.js'\nimport NameForm from './componentes/nameClient/nameClient.js'\nimport MenuBreakfast from './componentes/menuday/menu-breakfast.js'\nimport MenuDay from './componentes/menuday/menu-allday';\nimport {database} from './provider.js'\n\n\nclass Steward extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    isToggleOn: true,\n    takeOrder:{\n        order: false,\n        orderD: false,\n        nameClient:'',\n        stateOrder:[],\n        menuBreakfast: true,\n        menuAllday: true,\n        totalAccount: 0,\n      },\n    menuB: props.menu.menuDesayuno,\n    menuD: props.menu.menuDia\n  }\n    \n    this.handleChange= this.handleChange.bind(this); \n    this.handleClickDay = this.handleClickDay.bind(this); \n    this.handleClickBreakfast = this.handleClickBreakfast.bind(this); \n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleFirebase = this.handleFirebase.bind(this);\n    \n  }\n\n  handleChange(event){\n    this.setState({\n      ...this.state,\n      takeOrder:{\n        ...this.state.takeOrder,\n        nameClient: event.target.value\n      }});\n  }\n  \n  handleClickDay(){\n         this.setState({\n        ...this.state,\n        takeOrder:{\n          ...this.state.takeOrder,\n        menuBreakfast : false,\n        menuAllday : false,\n        orderD: this.state.menuD,\n      }});\n      \n  }\n\nhandleClickBreakfast(){\n    this.setState({\n   ...this.state,\n   takeOrder:{\n     ...this.state.takeOrder,\n   menuAllday : false,\n   menuBreakfast : false,\n   order: this.state.menuB\n  }});\n}\n\nhandleInputChange(event) {\n  let name = event.target.getAttribute('product')\n  let value = Number(event.target.getAttribute('value'))\n  const newItem = []\n \n \n  newItem.push({\n    item: name,\n    price: value\n  })\n\n\n  this.setState({\n    ...this.state,\n   takeOrder:{\n     ...this.state.takeOrder,\n    stateOrder: this.state.takeOrder.stateOrder.concat(newItem),\n    totalAccount:  this.state.takeOrder.totalAccount + value,\n    }\n    \n})\n}\n\nhandleFirebase(){\n\n  const order = {\n   name: this.state.takeOrder.nameClient,\n   order: this.state.takeOrder.stateOrder.map((itemOrder)=>{  \n    return (itemOrder.item)\n  }) \n  }; \n  \n  var newPostKey = database.push().key;\n\n  var updates = {};\n  updates['BQKitchen/'+ newPostKey] = order;\n\n \n  return database.update(updates);\n}\n\n\nrender() {\n\n  let order = this.state.takeOrder.stateOrder.map((itemOrder)=>{\n  \n    return <p> {itemOrder.item} ... {itemOrder.price}</p>\n  }) \n\n    return (\n      <div className=\"App\">\n       <NameForm\n        onChange={this.handleChange}\n        />\n        <SplitPane\n          left={  \n            <div>\n            <p>Resumen de Pedido</p>\n            <p>Cliente:{' '}{this.state.takeOrder.nameClient.toLocaleUpperCase()}</p>  \n            <p key={order}>{order}</p>\n            <footer>\n              <button className=\"App-buttons\">Total: ${this.state.takeOrder.totalAccount}</button>\n              <button className=\"App-buttons\" onClick={this.handleFirebase}>Enviar a Cocina</button>               \n            </footer>            \n            </div>\n          }  \n          right={\n            <div className=\"rightFlex\">\n            <Toogle toogleOn={this.state.takeOrder.menuBreakfast} onClick={this.handleClickBreakfast} children='Menú Desayuno'/>\n            <Toogle toogleOn={this.state.takeOrder.menuAllday} onClick={this.handleClickDay} children='Menú del Día'/> \n            <MenuBreakfast object={this.state.takeOrder.order} onClickButtons={this.handleInputChange}/>  \n            <MenuDay object={this.state.takeOrder.orderD} onClickButtons={this.handleInputChange} />  \n            \n            </div>\n          }/>\n            \n        \n          \n       \n      </div>\n    );\n  }\n}\n\nexport default Steward;\n","import React, {Component} from 'react'\nimport {database} from '../provider.js'\nimport './helpers.css'\n\nclass HelperKitchen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderKitchen: [],\n      nameOrder: [],\n      itemOrder: [],\n    }\n  \n  }\n\n  componentDidMount() {\n    database.child('BQKitchen').on('value', (snapshot) => {\n      let key = snapshot.val();\n      const arrOrderComplete = [];\n      for (let read in key) {\n          arrOrderComplete.push(key[read])\n      }\n      this.setState({\n        ...this.state,\n        orderKitchen: arrOrderComplete\n      },()=>{\n        let arrName = this.state.orderKitchen.map((itemOrder) => {\n          return (itemOrder.name)\n        })\n        let arrOrder = this.state.orderKitchen.map((itemOrder) => {\n          return (itemOrder.order)\n        })\n        \n        this.setState({\n          ...this.state,\n          nameOrder: this.state.nameOrder.concat(arrName),\n          itemOrder: this.state.itemOrder.concat(arrOrder),\n        });\n        console.log(arrOrderComplete)\n      })\n    }); \n\n    \n  }\n  render() {\n\n    let listOrder = this.state.itemOrder.flat().map((item)=>{\n      return (<li>{item}</li>)\n    })\n\n    return (       \n      <div className = \"orderKitchen\" key={this.state.nameOrder}>\n        <p> Nombre: {this.state.nameOrder} </p>\n        <p> Item:</p>\n        <ul>{listOrder}</ul>\n      </div>\n    )\n\n  }\n}\nexport default HelperKitchen\n\n\n\n\n/*\nfunction HelperKitchen(){  \n  \n database.once('value', (snapshot) => {\n  const orderKitchen=[];\n  let snapKey = snapshot.val();\n      for (let read in snapKey){\n          orderKitchen.push(snapKey[read])\n      }  \n\n   orderKitchen.map((itemOrder) => {\n       \n        let name = itemOrder.name  \n        let order = itemOrder.order   \n\n        return console.log(name,order)\n      })\n    });\n\n    return(\n      <div className=\"orderKitchen\">\n      <p>Nombre:</p>\n      <p>Item:</p>\n      </div>\n    )\n      \n\n} */","import React, {Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport HelperKitchen from './compKitchen/helper';\n\n\nclass Kitchen extends Component {\n    render(){\n    return (\n        <div className=\"App-header\">\n        <HelperKitchen/>\n        </div>\n    )\n    }\n}\n\nexport default Kitchen;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch , Redirect} from 'react-router-dom';\nimport './App.css';\nimport NavBar from './componentes/nav-bar/nav-bar.js'\nimport menu from'./burguerQueen.json'\nimport Steward from './Steward'\nimport Kitchen from './Kitchen';\n\n\nclass App extends Component {\n/*\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  } */\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar className=\"App-header\"/>         \n          <Switch>           \n            <Route\n              exact\n              path=\"/Steward\"\n              render={() => <Steward menu={menu}/>} />\n            <Route\n              exact\n              path=\"/Kitchen\"\n              render={() => <Kitchen/>} />                     \n          <Redirect path=\"*\" to=\"/Steward\"></Redirect>      \n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import menu from'./burguerQueen.json'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/BQ.b40cdfb9.png\";"],"sourceRoot":""}